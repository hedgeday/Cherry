{
  "author": {
    "name": "Aaron Heckmann",
    "email": "aaron.heckmann+github@gmail.com"
  },
  "name": "gridfs-stream",
  "description": "Writable/Readable Nodejs compatible GridFS streams",
  "version": "0.3.2",
  "keywords": [
    "mongodb",
    "mongoose",
    "gridfs"
  ],
  "scripts": {
    "test": "make test"
  },
  "dependencies": {},
  "devDependencies": {
    "mocha": "*",
    "mongodb": "1.1.7"
  },
  "optionalDependencies": {},
  "engines": {
    "node": ">= 0.4.2"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/aheckmann/gridfs-stream.git"
  },
  "readme": "# gridfs-stream\n\nEasily stream files to and from MongoDB [GridFS](http://www.mongodb.org/display/DOCS/GridFS).\n\n```js\nvar mongo = require('mongodb');\nvar Grid = require('gridfs-stream');\nvar gfs = Grid(db, mongo);\n\n// streaming to gridfs\nvar writestream = gfs.createWriteStream('filename');\nfs.createReadStream('/some/path').pipe(writestream);\n\n// streaming from gridfs\nvar readstream = gfs.createReadStream('filename');\nreadstream.pipe(response);\n```\n\nCreated streams are compatible with other Node streams so piping anywhere is easy.\n\n## install\n\n```\nnpm install gridfs-stream\n```\n\n## use\n\n```js\nvar mongo = require('mongodb');\nvar Grid = require('gridfs-stream');\n\n// create or use an existing mongodb-native db instance.\n// for this example we'll just create one:\nvar db = new mongo.Db('yourDatabaseName', new Server(\"127.0.0.1\", 27017));\n\n// make sure the db instance is open before passing into `Grid`\ndb.open(function (err) {\n  if (err) return handleError(err);\n  var gfs = Grid(db, mongo);\n\n  // all set!\n})\n```\n\nThe `gridfs-stream` module exports a constructor that accepts an open [mongodb-native](https://github.com/mongodb/node-mongodb-native/) db and the [mongodb-native](https://github.com/mongodb/node-mongodb-native/) driver you are using. _The db must already be opened before calling `createWriteStream` or `createReadStream`._\n\nNow we're ready to start streaming.\n\n## createWriteStream\n\nTo stream data to GridFS we call `createWriteStream` passing a filename and any options.\n\n```js\nvar writestream = gfs.createWriteStream('filename' [, options]);\nfs.createReadStream('/some/path').pipe(writestream);\n```\n\nThe created File object is passed in the writeStreams `close` event.\n\n```js\nwritestream.on('close', function (file) {\n  // do something with `file`\n  console.log(file.filename);\n});\n```\n\n## createReadStream\n\nTo stream data out of GridFS we call `createReadStream` passing a filename and any options.\n\n```js\nvar readstream = gfs.createReadStream('filename' [, options]);\nreadstream.pipe(response);\n```\n\nAny options are passed to the internally created [GridStore](http://mongodb.github.com/node-mongodb-native/api-generated/gridstore.html).\n\n## removing files\n\nFiles can be removed by passing their `id` to the `remove()` method.\n\n```js\ngfs.remove(id, function (err) {\n  if (err) return handleError(err);\n  console.log('success');\n});\n\n```\n\n## accessing file metadata\n\nAll file meta-data (file name, upload date, contentType, etc) are stored in a special mongodb collection separate from the actual file data. This collection can be queried directly:\n\n```js\n  var gfs = Grid(conn.db);\n  gfs.files.find({ filename: 'myImage.png' }).toArray(function (err, files) {\n    if (err) ...\n    console.log(files);\n  })\n```\n\nYou may optionally change the root gridfs collection as well:\n\n```js\n  var gfs = Grid(conn.db);\n  gfs.collection('myroot').find({ filename: 'myImage.png' }).toArray(function (err, files) {\n    if (err) ...\n    console.log(files);\n  })\n```\n\n## using with mongoose\n\n```js\nvar mongoose = require('mongoose');\nvar Grid = require('gridfs-stream');\n\nvar conn = mongoose.createConnection(..);\nconn.once('open', function () {\n  var gfs = Grid(conn.db, mongoose.mongo);\n\n  // all set!\n})\n```\n\nYou may optionally assign the driver directly to the `gridfs-stream` module so you don't need to pass it along each time you construct a grid:\n\n```js\nvar mongoose = require('mongoose');\nvar Grid = require('gridfs-stream');\nGrid.mongo = mongoose.mongo;\n\nvar conn = mongoose.createConnection(..);\nconn.once('open', function () {\n  var gfs = Grid(conn.db);\n\n  // all set!\n})\n```\n\n[LICENSE](https://github.com/aheckmann/gridfs-stream/blob/master/LICENSE)\n",
  "_id": "gridfs-stream@0.3.2",
  "dist": {
    "shasum": "3b322e575d7dfa785e54a4749fc162002728e6d9"
  },
  "_from": "gridfs-stream"
}
